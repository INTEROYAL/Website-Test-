name: Deploy and Manage Static Website to S3

on:
  push:
    branches:
      - master          # Trigger deploy on push to the master branch
    tags:
      - 'delete-*'      # Trigger destroy on push to tags matching 'delete-*'

jobs:
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}  # Run deploy only if the push is to the master branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Output Website URL
        working-directory: ./terraform
        id: terraform
        run: |
          website_url=$(terraform output -raw website_url)
          echo "Your website is available at $website_url"

  destroy:
    if: ${{ startsWith(github.ref, 'refs/tags/delete-') }}  # Run destroy only if the push is to a tag matching 'delete-*'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Destroy Terraform
        working-directory: ./terraform
        run: terraform destroy -auto-approve


        - name: Show Terraform State
  working-directory: ./terraform
  run: terraform state list

- name: Show Terraform Outputs
  working-directory: ./terraform
  run: terraform output